import os 
from dotenv import load_dotenv
from langchain.sql_database import SQLDatabase
from langchain.agents.agent_toolkits import SQLDatabaseToolkit
from langchain.agents import create_sql_agent
from langchain.chat_models import init_chat_model

load_dotenv()

api_key = os.getenv("GROQ_API_KEY")  #Load teh api key from .env

if not api_key:
    raise ValueError("api key is missing")

def chat_with_sql(query, db_user, db_password, db_host, db_name):
       
        """
        Function to process a natural language query and retrieve results from an SQL database.

        Args:
            query (str): User's natural language question.
            db_user (str): Database username.
            db_password (str): Database password.
            db_host (str): Database host address.
            db_name (str): Name of the database.

        Returns:
            str: Response generated by the LLM.
        """
        llm = init_chat_model("llama3-8b-8192", model_provider="groq")

        try:
              db = SQLDatabase.from_uri(f"mysql+pymysql://{db_user}:{db_password}@{db_host}/{db_name}")
        except Exception as e:
              return f"Database connection failed: {str(e)}"

        toolkit = SQLDatabaseToolkit(db=db, llm =llm)

        agent_executor = create_sql_agent(
              llm = llm,
              toolkit = toolkit,
              max_iterations=20,
              verbose = True
        )

        try:
              response = agent_executor.run(query)
              return response
        except Exception as e:
              return f"Error processing query: {str(e)}"
        

# result = chat_with_sql("How many tables in the database","root","12345","localhost","pandeyji_eatery" )

# print(result)
       

 